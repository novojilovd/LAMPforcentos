---
- name: "MariaBD install"
  yum:
    name: ["mariadb", "mariadb-server"]
    state: present

- name: "MariaDB Start and Enable"
  ansible.builtin.service:
    state: restarted
    enabled: yes

# Set your secrets into vars
- name: "MariaDB set to work"
  ansible.builtin.shell: |
    spawn /bin/bash /usr/bin/mysql_secure_installation
    
    expect "\nNOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB
      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!

In order to log into MariaDB to secure it, we'll need the current
password for the root user.  If you've just installed MariaDB, and
you haven't set the root password yet, the password will be blank,
so you should just press enter here.

Enter current password for root (enter for none):"

    send "\r"
    expect "Set root password? [Y/n] "
    send "Y\r"
    expect "New password: "
    send "{{ password_root }}\r"
    expect "Re-enter new password: "
    send "{{ password_root }}\r"
    expect "New password: 
Re-enter new password: 
Password updated successfully!
Reloading privilege tables..
 ... Success!


By default, a MariaDB installation has an anonymous user, allowing anyone
to log into MariaDB without having to have a user account created for
them.  This is intended only for testing, and to make the installation
go a bit smoother.  You should remove them before moving into a
production environment.

Remove anonymous users? [Y/n] "
    send "Y\r"
    expect " ... Success!

Normally, root should only be allowed to connect from 'localhost'.  This
ensures that someone cannot guess at the root password from the network.

Disallow root login remotely? [Y/n] "
    send "Y\r"
    expect " ... Success!

By default, MariaDB comes with a database named 'test' that anyone can
access.  This is also intended only for testing, and should be removed
before moving into a production environment.

Remove test database and access to it? [Y/n] "
    send "Y\r"
    expect " - Dropping test database...
 ... Success!
 - Removing privileges on test database...
 ... Success!

Reloading the privilege tables will ensure that all changes made so far
will take effect immediately.

Reload privilege tables now? [Y/n] "
    send "Y\r"
    
    exit 0
  args:
    executable: /usr/bin/expect
  delegate_to: localhost
